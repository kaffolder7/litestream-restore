name: Docker Multi-Registry Push

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    # branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Registry URLs
  GITHUB_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  # GitHub image name (formatted as `<account>/<repo>`)
  GITHUB_IMAGE_NAME: ${{ github.repository }}
  # Docker Hub image name (using Docker Hub username)
  DOCKERHUB_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
  ALPINE_VERSION: "3.21"
  DEBIAN_VERSION: "bookworm-slim"

jobs:
  # Ensure only `v*.*.*` tags on `main` branch run GitHub Action
  # check-branch:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check if tag is from main branch
  #       run: |
  #         DEFAULT_BRANCH=$(git rev-parse --abbrev-ref origin/HEAD | sed 's|origin/||')
  #         TAG_BRANCH=$(git branch --contains ${{ github.ref }} | grep "$DEFAULT_BRANCH" || true)
  #         if [ -z "$TAG_BRANCH" ]; then
  #           echo "Tag is not from $DEFAULT_BRANCH. Exiting..."
  #           exit 1
  #         fi

  build:
    strategy:
      matrix:
        variant: [alpine, debian]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Log in to GitHub Container Registry (except on PR)
      - name: Log in to GitHub registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Log in to Docker Hub (except on PR)
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata for both registries
      - name: Extract Docker metadata for GitHub Packages
        id: meta-github
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}
          tags: |
            # Tag branches as type=ref,event=branch
            # For Alpine variant, add suffix
            type=ref,event=branch,suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=ref,event=branch,enable=${{ matrix.variant == 'debian' }}
            # Tag releases as version (v1.0.0), major.minor (v1.0), and latest
            type=semver,pattern={{version}},suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=semver,pattern={{version}},enable=${{ matrix.variant == 'debian' }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.variant == 'debian' }}
            type=raw,value=latest-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' && github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ matrix.variant == 'debian' && github.ref == 'refs/heads/main' }}

      - name: Extract Docker metadata for Docker Hub
        id: meta-dockerhub
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          # images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          images: ${{ env.DOCKERHUB_IMAGE_NAME }}
          tags: |
            # Tag branches as type=ref,event=branch
            # For Alpine variant, add suffix
            type=ref,event=branch,suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=ref,event=branch,enable=${{ matrix.variant == 'debian' }}
            # Tag releases as version (v1.0.0), major.minor (v1.0), and latest
            type=semver,pattern={{version}},suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=semver,pattern={{version}},enable=${{ matrix.variant == 'debian' }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.variant == 'debian' }}
            type=raw,value=latest-${{ matrix.variant }},enable=${{ matrix.variant == 'alpine' && github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ matrix.variant == 'debian' && github.ref == 'refs/heads/main' }}
      
      # Build and push Docker image with Buildx to both registries (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta-github.outputs.tags }}
            ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-github.outputs.labels }}
          build-args: |
            VARIANT=${{ matrix.variant }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
            DEBIAN_VERSION=${{ env.DEBIAN_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digests in both registries except on PRs
      # This will only write to the public Rekor transparency log when the Docker
      # repositories are public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GITHUB_TAGS: ${{ steps.meta-github.outputs.tags }}
          DOCKERHUB_TAGS: ${{ steps.meta-dockerhub.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "${GITHUB_TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
          echo "${DOCKERHUB_TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}